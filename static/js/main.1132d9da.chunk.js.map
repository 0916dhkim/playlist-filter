{"version":3,"sources":["components/RangeInput/RangeInput.module.scss","components/Playlists/Playlists.module.scss","serviceWorker.ts","config.ts","auth.ts","components/RangeInput/RangeInput.tsx","spotify_types.ts","filterTracks.ts","components/Controls/Controls.tsx","spotify.ts","hooks/useRefreshedSession.ts","components/ExportPage/ExportPage.tsx","hooks/useCancelToken.ts","components/Login/Login.tsx","components/Playlists/Playlists.tsx","components/Tracks/Tracks.tsx","App.tsx","components/MaterialTheme/MaterialTheme.tsx","state.ts","reducers/LandingPage/landingPageReducer.ts","reducers/composeReducers.ts","reducers/createReducer.ts","reducers/PersonalPage/playlistsReducer.ts","reducers/PersonalPage/selectedPlaylistIdReducer.ts","reducers/PersonalPage/loadingTracksReducer.ts","reducers/PersonalPage/tracksReducer.ts","reducers/PersonalPage/personalPageReducer.ts","reducers/PersonalPage/audioFeatureRangeReducer.ts","reducers/ExportPage/exportPageReducer.ts","reducers/ExportPage/newPlaylistNameReducer.ts","store.ts","reducers/reducer.ts","index.tsx","components/Controls/Controls.module.scss","components/Tracks/Tracks.module.scss","App.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","CLIENT_ID","TOKEN_ENDPOINT","API_ROOT","REQUESTED_SCOPES","join","getCurrentPageUri","protocol","host","pathname","generateRandomString","array","Uint32Array","crypto","getRandomValues","Array","from","dec","toString","substr","signIn","a","state","localStorage","setItem","pkceChallenge","code_verifier","code_challenge","url","URL","searchParams","append","assign","params","href","code","get","getItem","Error","codeVerifier","removeItem","body","URLSearchParams","axios","post","headers","then","res","data","access_token","Date","now","parseFloat","expires_in","refresh_token","catch","e","console","error","alert","finally","refreshToken","response","nextAccessToken","nextRefreshToken","nextTtl","nextAccessTokenExpiry","isNaN","accessToken","accessTokenExpiry","RangeInput","label","lowerLimit","upperLimit","step","minValue","maxValue","setMinValue","setMaxValue","marks","value","Paper","className","style","container","Slider","min","max","valueLabelDisplay","onChange","_","AudioFeatureKey","filterTracks","tracks","range","filter","track","feature","NormalizedRangeInput","dispatch","useMemo","ret","replace","toUpperCase","slice","x","type","NORMALIZED_FEATURES_TO_CONTROL","Controls","useSelector","audioFeatureRange","useDispatch","map","tempo","reduce","b","Math","floor","ceil","Infinity","minTrackTempo","maxTrackTempo","grid","key","ButtonGroup","buttongroup","variant","color","Button","onClick","t","splitIntoBatches","arr","batchSize","i","length","push","timeout","ms","Promise","resolve","setTimeout","accessTokenToHeader","rateLimitedRequest","requestConfig","maxRetry","status","timer","getAllPages","cancelToken","nextUrl","items","method","item","next","getOne","getMe","me","id","playlistId","batches","batch","ids","audio_features","createPlaylist","playlistName","trackUris","creationUrl","JSON","stringify","name","public","creationRes","additionUrl","uris","useRefreshedSession","session","currentSessionPromise","refresh","refreshedSession","ExportPage","newPlaylistName","source","CancelToken","useEffect","cancel","token","useCancelToken","uri","target","Login","playlists","selectedPlaylistId","cancelTokenSource","getUserPlaylists","isCancel","getPlaylistTracks","List","dense","playlist","ListItem","button","selectPlaylist","trackMap","Map","filteredTracks","values","square","Table","stickyHeader","table","TableHead","header","TableRow","TableCell","TableBody","artists","artist","acousticness","danceability","energy","instrumentalness","liveness","loudness","speechiness","valence","useAuth","handleAuthRedirect","getSession","LandingPage","SignedInApp","loadingTracks","title","Playlists","CircularProgress","Tracks","App","page","theme","createMuiTheme","palette","primary","main","green","secondary","orange","transitions","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","MaterialThemeProvider","props","ThemeProvider","children","INITIAL_STATE","DEFAULT_AUDIO_FEATURE_RANGE","duration_ms","mode","time_signature","landingPageReducer","action","composeReducers","reducers","k","reducer","createReducer","handlers","hasOwnProperty","handler","playlistReducer","SET_PLAYLISTS","selectedPlaylistIdReducer","START_FETCHING_TRACKS","loadingTracksReducer","SET_TRACKS","tracksReducer","composedReducer","SET_AUDIO_FEATURE_MIN","SET_AUDIO_FEATURE_MAX","RESET_AUDIO_FEATURE_RANGE","personalPageReducer","SET_NEW_PLAYLIST_NAME","store","createStore","exportPageReducer","ReactDOM","render","StrictMode","StylesProvider","injectFirst","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1132d9da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RangeInput_container__1sXvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Playlists_container__uSOqU\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Spotify application client id.\n */\nexport const CLIENT_ID = \"7a3bed1acbc948829fdb043e52b845b8\";\n\n/**\n * Spotify authorization endpoint.\n */\nexport const AUTHORIZATION_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n\n/**\n * Spotify token endpoint.\n */\nexport const TOKEN_ENDPOINT = \"https://accounts.spotify.com/api/token\";\n\n/**\n * Spotify API root.\n */\nexport const API_ROOT = \"https://api.spotify.com/v1\";\n\n/**\n * Space separated list of scopes.\n */\nexport const REQUESTED_SCOPES = [\n  \"playlist-read-private\",\n  \"playlist-modify-private\",\n  \"playlist-modify-public\"\n].join(\" \");\n\n","import axios from \"axios\";\nimport pkceChallenge from \"pkce-challenge\";\nimport { CLIENT_ID, AUTHORIZATION_ENDPOINT, TOKEN_ENDPOINT, REQUESTED_SCOPES } from \"./config\";\n\nexport type Session = {\n  accessToken: string,\n  accessTokenExpiry: number,\n  refreshToken: string\n};\n\n/**\n * Get URI of the current page.\n */\nfunction getCurrentPageUri() {\n  return window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n}\n\n/**\n * Generate a random string\n * to be used for Auth state.\n */\nfunction generateRandomString() {\n  let array = new Uint32Array(28);\n  window.crypto.getRandomValues(array);\n  return Array.from(\n    array,\n    dec => (\"0\" + dec.toString(16)).substr(-2)\n  ).join(\"\");\n}\n\n/**\n * Begin sign-in process.\n */\nexport async function signIn() {\n  const state = generateRandomString();\n  localStorage.setItem(\"pkce-state\", state);\n\n  const { code_verifier, code_challenge } = pkceChallenge();\n  localStorage.setItem(\"pkce-code-verifier\", code_verifier);\n\n  const url = new URL(AUTHORIZATION_ENDPOINT);\n  url.searchParams.append(\"response_type\", \"code\");\n  url.searchParams.append(\"client_id\", CLIENT_ID);\n  url.searchParams.append(\"state\", state);\n  url.searchParams.append(\"scope\", REQUESTED_SCOPES);\n  url.searchParams.append(\"redirect_uri\", getCurrentPageUri());\n  url.searchParams.append(\"code_challenge\", code_challenge);\n  url.searchParams.append(\"code_challenge_method\", \"S256\");\n\n  // Redirect to auth page.\n  window.location.assign(url.toString());\n}\n\n/**\n * Discard user credentials.\n */\nexport function signOut() {\n  localStorage.removeItem(\"access-token\");\n  localStorage.removeItem(\"access-token-expiry\");\n  localStorage.removeItem(\"refresh-token\");\n}\n\n/**\n * Handle user redirected from auth server.\n */\nexport async function handleAuthRedirect() {\n  const params = new URL(window.location.href).searchParams;\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n  if (code) {\n    // Verify state.\n    if (localStorage.getItem(\"pkce-state\") !== state) {\n      throw new Error(\"Invalid state returned from auth server.\");\n    }\n\n    const codeVerifier = localStorage.getItem(\"pkce-code-verifier\");\n    if (!codeVerifier) {\n      throw new Error(\"Missing local code verifier.\");\n    }\n\n    // Remove state & code verifier from local storage.\n    localStorage.removeItem(\"pkce-state\");\n    localStorage.removeItem(\"pkce-code-verifier\");\n\n    const body = new URLSearchParams();\n    body.append(\"client_id\", CLIENT_ID);\n    body.append(\"grant_type\", \"authorization_code\");\n    body.append(\"code\", code);\n    body.append(\"redirect_uri\", getCurrentPageUri());\n    body.append(\"code_verifier\", codeVerifier);\n\n    // Request access token.\n    axios.post(\n      TOKEN_ENDPOINT,\n      body.toString(),\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n        }\n      }\n    ).then(res => {\n      localStorage.setItem(\"access-token\", res.data.access_token);\n      localStorage.setItem(\"access-token-expiry\", (Date.now() + 1000 * parseFloat(res.data.expires_in)).toString());\n      localStorage.setItem(\"refresh-token\", res.data.refresh_token);\n    }).catch(e => {\n      console.error(e);\n      alert(\"Login Failed.\");\n    }).finally(() => {\n      window.location.href = getCurrentPageUri();\n    });\n  }\n}\n\n/**\n * Asynchronously request new access token.\n * @param refreshToken Spotify refresh token\n */\nexport async function refresh(refreshToken: string): Promise<Session> {\n  const body = new URLSearchParams();\n  body.append(\"grant_type\", \"refresh_token\");\n  body.append(\"refresh_token\", refreshToken);\n  body.append(\"client_id\", CLIENT_ID);\n  const response = await axios.post(\n    TOKEN_ENDPOINT,\n    body.toString(),\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n      }\n    }\n  );\n  const [nextAccessToken, nextRefreshToken, nextTtl] = [response.data.access_token, response.data.refresh_token, response.data.expires_in];\n  const nextAccessTokenExpiry = Date.now() + 1000 * parseFloat(nextTtl);\n  if (typeof nextAccessToken !== \"string\" || typeof nextRefreshToken !== \"string\" || isNaN(nextAccessTokenExpiry)) {\n    throw new Error(\"Invalid response from auth server.\");\n  }\n  localStorage.setItem(\"access-token\", nextAccessToken);\n  localStorage.setItem(\"access-token-expiry\", nextAccessTokenExpiry.toString());\n  localStorage.setItem(\"refresh-token\", nextRefreshToken);\n  return {\n    accessToken: nextAccessToken,\n    accessTokenExpiry: nextAccessTokenExpiry,\n    refreshToken: nextRefreshToken\n  };\n}\n\n/**\n * @returns Session information saved in local storage.\n */\nexport function getSession(): Session | null {\n  const accessToken = localStorage.getItem(\"access-token\");\n  const refreshToken = localStorage.getItem(\"refresh-token\");\n  const accessTokenExpiry = parseFloat(localStorage.getItem(\"access-token-expiry\") || \"\");\n  if (accessToken && refreshToken && accessTokenExpiry) {\n    return { accessToken, accessTokenExpiry, refreshToken };\n  }\n  return null;\n}","import { Paper, Slider } from \"@material-ui/core\";\n\nimport React from \"react\";\nimport style from \"./RangeInput.module.scss\";\n\ntype RangeInputProps = {\n  label: string,\n  lowerLimit: number,\n  upperLimit: number,\n  step: number,\n  minValue: number,\n  maxValue: number\n  setMinValue: (value: number) => void,\n  setMaxValue: (value: number) => void\n};\n\nfunction RangeInput({\n  label,\n  lowerLimit,\n  upperLimit,\n  step,\n  minValue,\n  maxValue,\n  setMinValue,\n  setMaxValue\n}: RangeInputProps) {\n  const marks = [\n    {\n      value: lowerLimit,\n      label: lowerLimit\n    },\n    {\n      value: upperLimit,\n      label: upperLimit\n    }\n  ];\n  return (\n    <Paper className={style.container}>\n      <h4>{label}</h4>\n      <Slider \n        min={lowerLimit}\n        max={upperLimit}\n        step={step}\n        marks={marks}\n        value={[minValue, maxValue]}\n        valueLabelDisplay={'auto'}\n        onChange={(_, value) => {\n          // Do nothing is value is not a tuple.\n          if (typeof value === 'number') {\n            return;\n          }\n          const [min, max] = value;\n          setMinValue(min);\n          setMaxValue(max);\n        }}\n      />\n    </Paper>\n  );\n}\n\nexport default RangeInput;\n","export type Paging<T> = {\n  href: string,\n  items: T[],\n  limit: number,\n  next: string | null,\n  offset: number,\n  previous: string | null,\n  total: number\n};\n\nexport type ExternalUrl = {\n  [key: string]: string\n};\n\nexport type ExternalId = {\n  [key: string]: string\n};\n\nexport type Followers = {\n  href: string | null,\n  total: number\n};\n\nexport type Image = {\n  height: number | undefined | null,\n  width: number | undefined | null,\n  url: string\n};\n\nexport type PublicUser = {\n  display_name: string | null,\n  external_urls: ExternalUrl,\n  followers: Followers,\n  href: string,\n  id: string,\n  images: Image[],\n  type: \"user\",\n  uri: string\n}\n\nexport type PrivateUser = PublicUser & {\n  country: string,\n  email: string,\n  product: string,\n};\n\nexport type Playlist = {\n  collaborative: boolean,\n  description: string | null,\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  images: Image[],\n  name: string,\n  owner: PublicUser,\n  public: boolean | null,\n  snapshot_id: string,\n  tracks: {\n    href: string,\n    total: number\n  } | null,\n  type: \"playlist\",\n  uri: string\n};\n\nexport type SimplifiedArtist = {\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  name: string,\n  type: \"artist\",\n  uri: string\n};\n\nexport type SimplifiedAlbum = {\n  album_group: string | undefined,\n  album_type: \"album\" | \"single\" | \"compilation\",\n  artists: SimplifiedArtist[],\n  available_markets: string[],\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  images: Image[],\n  name: string,\n  release_date: string,\n  release_date_precision: \"year\" | \"month\" | \"day\",\n  restrictions: { reason: string },\n  type: \"album\",\n  uri: string\n};\n\nexport type SimplifiedTrack = {\n  artists: SimplifiedArtist[],\n  available_markets: string[],\n  disc_number: number,\n  duration_ms: number,\n  explicit: boolean,\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  is_playable: boolean,\n  restrictions: { reason: string },\n  name: string,\n  preview_url: string | null,\n  track_number: number,\n  type: \"track\",\n  uri: string,\n  is_local: boolean\n};\n\nexport type FullTrack = SimplifiedTrack & {\n  album: SimplifiedAlbum,\n  external_ids: ExternalId,\n  popularity: number\n}\n\nexport type PlaylistTrack = {\n  added_at: string | null,\n  added_by: PublicUser,\n  is_local: boolean,\n  track: FullTrack\n};\n\nexport const AudioFeatureKey = [\n  \"duration_ms\",\n  \"key\",\n  \"mode\",\n  \"time_signature\",\n  \"acousticness\",\n  \"danceability\",\n  \"energy\",\n  \"instrumentalness\",\n  \"liveness\",\n  \"loudness\",\n  \"speechiness\",\n  \"valence\",\n  \"tempo\"\n] as const;\n\nexport type AudioFeatureKey = typeof AudioFeatureKey[number];\n\nexport type AudioFeatures = {\n  id: string,\n  uri: string,\n  track_href: string,\n  analysis_url: string,\n  type: \"audio_features\"\n} & {\n  [key in AudioFeatureKey]: number\n};\n","import { AudioFeatureKey } from \"./spotify_types\";\nimport { TrackInfo, AudioFeatureRange } from \"./state\";\n\n/**\n * Filter tracks by audio feature ranges.\n * @param tracks Array of track info.\n * @param range Filter criteria.\n */\nexport function filterTracks(tracks: ReadonlyArray<TrackInfo>, range: AudioFeatureRange): ReadonlyArray<TrackInfo> {\n  return tracks.filter(track => {\n    for (const feature of AudioFeatureKey) {\n      if (track[feature] < range[feature][0] || track[feature] > range[feature][1]) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n","import { Button, ButtonGroup } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ApplicationDispatch } from \"../../store\";\nimport { AudioFeatureKey } from \"../../spotify_types\";\nimport { PersonalPageState } from \"../../state\";\nimport RangeInput from \"../RangeInput/RangeInput\";\nimport { filterTracks } from \"../../filterTracks\";\nimport style from \"./Controls.module.scss\";\n\ntype NormalizedRangeInputProps = {\n  feature: AudioFeatureKey\n  range: [number, number],\n  dispatch: ApplicationDispatch\n};\n\n/**\n * RangeInput Component for Audio Features with Range 0 to 1.\n */\nfunction NormalizedRangeInput({ feature, range, dispatch }: NormalizedRangeInputProps) {\n  const label = useMemo(() => {\n    const ret = feature.replace(\"_\", \" \");\n    return ret[0].toUpperCase() + ret.slice(1);\n  }, [feature]);\n  return (\n    <RangeInput\n      label={label}\n      lowerLimit={0}\n      upperLimit={1}\n      step={0.01}\n      minValue={range[0]}\n      maxValue={range[1]}\n      setMinValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MIN\", feature, value: x })}\n      setMaxValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MAX\", feature, value: x })}\n    />\n  );\n}\n\nconst NORMALIZED_FEATURES_TO_CONTROL: ReadonlyArray<AudioFeatureKey> = [\n  \"acousticness\",\n  \"danceability\",\n  \"energy\",\n  \"instrumentalness\",\n  \"liveness\",\n  \"speechiness\",\n  \"valence\"\n];\n\nfunction Controls() {\n  const range = useSelector((state: PersonalPageState) => state.audioFeatureRange);\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  const [minTrackTempo, maxTrackTempo] = useMemo(\n    () => tracks.map(track => track.tempo).reduce((a, b) => [Math.min(a[0], Math.floor(b)), Math.max(a[1], Math.ceil(b))], [Infinity, -Infinity]),\n    [tracks]\n  );\n\n  function handleExport() {\n    dispatch({\n      type: \"GO_TO_EXPORT_PAGE\",\n      tracks: filterTracks(tracks, range).map(t => ({...t, type: \"track\"}))\n    });\n  }\n\n  return (\n    <div>\n      <div className={style.grid}>\n        <RangeInput\n          label=\"Tempo (BPM)\"\n          lowerLimit={minTrackTempo}\n          upperLimit={maxTrackTempo}\n          step={1}\n          minValue={range.tempo[0]}\n          maxValue={Math.min(range.tempo[1], maxTrackTempo)}\n          setMinValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MIN\", feature: \"tempo\", value: x })}\n          setMaxValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MAX\", feature: \"tempo\", value: x })}\n        />\n        {NORMALIZED_FEATURES_TO_CONTROL.map(feature => (\n          <NormalizedRangeInput\n            key={feature}\n            feature={feature}\n            dispatch={dispatch}\n            range={range[feature]}\n          />\n        ))}\n      </div>\n      <ButtonGroup\n        className={style.buttongroup}\n        variant={\"contained\"}\n        color={\"primary\"}\n      >\n        <Button\n          onClick={() => dispatch({ type: \"RESET_AUDIO_FEATURE_RANGE\" })}\n        >\n          Reset Filters\n        </Button>\n        <Button\n          onClick={handleExport}\n        >\n          Export Tracks\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default Controls;\n","import axios, { CancelToken, AxiosRequestConfig } from \"axios\";\nimport { TrackInfo } from \"./state\";\nimport { API_ROOT } from \"./config\";\nimport {\n  Paging,\n  PrivateUser,\n  Playlist,\n  PlaylistTrack,\n  AudioFeatures\n} from \"./spotify_types\";\n\nfunction splitIntoBatches<T>(arr: ReadonlyArray<T>, batchSize: number = 30): ReadonlyArray<ReadonlyArray<T>> {\n  let i = 0;\n  const ret: Array<Array<T>> = [];\n  while (arr.length > i) {\n    ret.push(arr.slice(i, i + batchSize));\n    i += batchSize;\n  }\n  return ret;\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Format access token to http bearer authorization header.\n * @param accessToken Spotify access token.\n */\nfunction accessTokenToHeader(accessToken: string): { \"Authorization\": string } {\n  return { \"Authorization\": `Bearer ${accessToken}` };\n}\n\n/**\n * Send HTTP request to Spotify and handle rate-limited message.\n * @param requestConfig Config for axios request.\n * @param maxRetry Max number of trial before throwing error.\n */\nasync function rateLimitedRequest<T>(requestConfig: AxiosRequestConfig, maxRetry: number = 3): Promise<T> {\n  for (let i = 0; i < maxRetry; i++) {\n    const res = await axios(requestConfig);\n    if (Math.floor(res.status / 100) === 2) {\n      // Status code is 200 - 299.\n      return res.data;\n    }\n    if (res.status === 429) {\n      const timer = parseFloat(res.headers[\"retry-after\"]);\n      if (isNaN(timer)) {\n        throw new Error(\"Status code 429 but missing retry-after header.\");\n      }\n      await timeout(timer * 1000);\n    }\n  }\n  throw new Error(`Failed to get response after ${maxRetry} retries.`);\n}\n\nasync function getAllPages<T>(url: string, accessToken: string, cancelToken: CancelToken): Promise<T[]> {\n  let nextUrl: string | null = url;\n  const items: T[] = [];\n  while (nextUrl) {\n    const res: Paging<T> = await rateLimitedRequest<Paging<T>>({\n      method: \"GET\",\n      url: nextUrl,\n      headers: accessTokenToHeader(accessToken),\n      cancelToken\n    });\n    for (let item of res.items) {\n      items.push(item);\n    }\n    nextUrl = res.next;\n  }\n  return items;\n}\n\nasync function getOne<T>(url: string, accessToken: string, cancelToken: CancelToken): Promise<T> {\n  return rateLimitedRequest<T>({\n    method: \"GET\",\n    url,\n    headers: accessTokenToHeader(accessToken),\n    cancelToken\n  });\n}\n\nexport async function getMe(accessToken: string, cancelToken: CancelToken): Promise<PrivateUser> {\n  const url = `${API_ROOT}/me`;\n  return getOne(url, accessToken, cancelToken);\n}\n\nexport async function getUserPlaylists(accessToken: string, cancelToken: CancelToken): Promise<Playlist[]> {\n  const me = await getMe(accessToken, cancelToken);\n  const url = `${API_ROOT}/users/${me.id}/playlists`;\n  return getAllPages(url, accessToken, cancelToken);\n}\n\nexport async function getPlaylistTracks(playlistId: string, accessToken: string, cancelToken: CancelToken): Promise<Array<TrackInfo>> {\n  const url = `${API_ROOT}/playlists/${playlistId}/tracks`;\n  const tracks = await getAllPages<PlaylistTrack>(url, accessToken, cancelToken);\n  const batches = splitIntoBatches(tracks, 40);\n  const ret: Array<TrackInfo> = [];\n\n  for (let batch of batches) {\n    const ids = batch.map(t => t.track.id);\n    const url = `${API_ROOT}/audio-features/?ids=${ids.join(\",\")}`;\n    const { audio_features } = await getOne<{\"audio_features\": AudioFeatures[]}>(url, accessToken, cancelToken);\n    for (let i = 0; i < batch.length; i++) {\n      ret.push({...batch[i].track, ...audio_features[i]});\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Create a new Spotify playlist and add tracks.\n * @param playlistName Name of new playlist.\n * @param trackUris Spotify URI of tracks to be added.\n * @param accessToken Spotify access token.\n * @param cancelToken Axios cancel token.\n */\nexport async function createPlaylist(playlistName: string, trackUris: ReadonlyArray<string>, accessToken: string, cancelToken: CancelToken): Promise<void> {\n  if (trackUris.length > 100) {\n    throw new Error(\"Cannot add more than 100 items at a time.\");\n  }\n\n  const me = await getMe(accessToken, cancelToken);\n  const creationUrl = `${API_ROOT}/users/${me.id}/playlists`;\n  const creationRes = await rateLimitedRequest<Playlist>({\n    method: \"POST\",\n    url: creationUrl,\n    headers: accessTokenToHeader(accessToken),\n    data: JSON.stringify({\n      name: playlistName,\n      public: false\n    })\n  });\n  const additionUrl = `${API_ROOT}/playlists/${creationRes.id}/tracks`;\n  await rateLimitedRequest({\n    method: \"POST\",\n    url: additionUrl,\n    headers: accessTokenToHeader(accessToken),\n    params: {\n      uris: trackUris.join(\",\")\n    }\n  });\n}\n","import { Session, refresh } from \"../auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ApplicationState } from \"../state\";\nimport { ApplicationDispatch } from \"../store\";\nimport { useMemo } from \"react\";\n\n/**\n * React hook to produce a promise of refreshed session based on current session.\n */\nexport function useRefreshedSession(): Promise<Session> {\n  const session = useSelector((state: ApplicationState) => state.session);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  // Memoize promise of current session.\n  const currentSessionPromise = useMemo(async () => {\n    if (!session) {\n      throw new Error(\"No session to refresh.\");\n    }\n    return session;\n  }, [session]);\n\n  // Refresh session if less than 1 minute until expiry.\n  if (session && session.accessTokenExpiry - Date.now() < 60 * 1000) {\n    return refresh(session.refreshToken).then(refreshedSession => {\n      dispatch({\n        type: \"SIGN_IN\",\n        value: refreshedSession\n      });\n      return refreshedSession;\n    }, e => {\n      console.error(`Failed to refresh session: ${e}`);\n      dispatch({ type: \"SIGN_OUT\" });\n      return currentSessionPromise;\n    });\n  }\n\n  return currentSessionPromise;\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ExportPageState } from \"../../state\";\nimport { ApplicationDispatch } from \"../../store\";\nimport { createPlaylist } from \"../../spotify\";\nimport { useRefreshedSession } from \"../../hooks/useRefreshedSession\";\nimport { useCancelToken } from \"../../hooks/useCancelToken\";\n\nexport function ExportPage() {\n  const refreshedSession = useRefreshedSession();\n  const tracks = useSelector((state: ExportPageState) => state.tracks);\n  const newPlaylistName = useSelector((state: ExportPageState) => state.newPlaylistName);\n  const dispatch = useDispatch<ApplicationDispatch>();\n  const cancelToken = useCancelToken();\n\n\n  async function handleExport() {\n    const { accessToken } = await refreshedSession;\n    await createPlaylist(\n      newPlaylistName,\n      tracks.map(track => track.uri),\n      accessToken,\n      cancelToken\n    );\n    alert(\"Export Complete!\");\n  }\n\n  return (\n    <div>\n      Export Page\n      <p>New Playlist Name</p>\n      <input type=\"text\" value={newPlaylistName} onChange={e => dispatch({ type: \"SET_NEW_PLAYLIST_NAME\", value: e.target.value })} />\n      <button onClick={handleExport}>Export</button>\n    </div>\n  );\n}\n","import axios, { CancelToken } from \"axios\";\nimport { useEffect } from \"react\";\n\n/**\n * Create an axios cancel token that cancels upon unmount.\n */\nexport function useCancelToken(): CancelToken {\n  const source = axios.CancelToken.source();\n\n  // Cancel upon unmount.\n  useEffect(() => {\n    return () => source.cancel();\n  }, [source]);\n\n  return source.token;\n}\n","import { signIn, signOut } from \"../../auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ApplicationDispatch } from \"../../store\";\nimport { ApplicationState } from \"../../state\";\nimport { Button } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport function Login() {\n  const session = useSelector((state: ApplicationState) => state.session);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  function handleSignOut() {\n    signOut();\n    dispatch({ type: \"SIGN_OUT\" });\n  }\n\n  return (\n    <div>\n      {session\n        ? <Button\n            variant={\"outlined\"}\n            color={\"primary\"}\n            onClick={handleSignOut}\n          >\n            Sign Out\n          </Button>\n        : <Button\n            variant={\"contained\"}\n            color={\"primary\"}\n            onClick={signIn}\n          >\n            Sign In With Spotify\n          </Button>\n      }\n    </div>\n  );\n}","import { List, ListItem, Paper } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { getPlaylistTracks, getUserPlaylists } from \"../../spotify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ApplicationDispatch } from \"../../store\";\nimport { PersonalPageState } from \"../../state\";\nimport axios from \"axios\";\nimport style from \"./Playlists.module.scss\";\nimport { useRefreshedSession } from \"../../hooks/useRefreshedSession\";\n\nexport default function() {\n  const refreshedSession = useRefreshedSession();\n  const playlists = useSelector((state: PersonalPageState) => state.playlists);\n  const selectedPlaylistId = useSelector((state: PersonalPageState) => state.selectedPlaylistId);\n  const dispatch = useDispatch<ApplicationDispatch>();\n  useEffect(() => {\n    const cancelTokenSource = axios.CancelToken.source();\n    refreshedSession.then(\n      ({ accessToken }) => getUserPlaylists(accessToken, cancelTokenSource.token)\n    ).then(playlists => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        value: playlists\n      });\n    }).catch(e => {\n      if (!axios.isCancel(e)) {\n        console.error(`Failed to fetch user playlists: ${e}`);\n      }\n    });\n    return () => cancelTokenSource.cancel();\n  }, [refreshedSession, dispatch]);\n\n  // Load tracks from selected playlist.\n  useEffect(() => {\n    if (selectedPlaylistId) {\n      const cancelTokenSource = axios.CancelToken.source();\n      refreshedSession.then(\n        ({ accessToken }) => getPlaylistTracks(selectedPlaylistId, accessToken, cancelTokenSource.token)\n      ).then(tracks => dispatch({\n        type: \"SET_TRACKS\",\n        value: tracks\n      })).catch(e => {\n        if (!axios.isCancel(e)) {\n          console.error(`Failed to fetch playlist tracks: ${e}`);\n        }\n      });\n\n      return () => cancelTokenSource.cancel();\n    }\n  }, [selectedPlaylistId, refreshedSession, dispatch]);\n\n  async function selectPlaylist(id: string) {\n    dispatch({\n      type: \"START_FETCHING_TRACKS\",\n      playlistId: id\n    });\n  }\n\n  return (\n    <Paper className={style.container}>\n      <List dense>\n        {playlists.map(playlist => (\n          <ListItem\n            key={playlist.id}\n            button\n            onClick={() => selectPlaylist(playlist.id)}\n          >\n            {playlist.name}\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n","import { Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport React, { useMemo } from \"react\";\n\nimport { PersonalPageState } from \"../../state\";\nimport { filterTracks } from \"../../filterTracks\";\nimport style from \"./Tracks.module.scss\";\nimport { useSelector } from \"react-redux\";\n\nexport default function() {\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const range = useSelector((state: PersonalPageState) => state.audioFeatureRange);\n\n  const trackMap = useMemo(\n    () => new Map(tracks.map(track => [track.id, track])),\n    [tracks]\n  );\n\n  const filteredTracks = useMemo(\n    () => filterTracks(Array.from(trackMap.values()), range),\n    [trackMap, range]\n  );\n\n  return (\n    <Paper square>\n      <h3>Tracks ({filteredTracks.length})</h3>\n      <Table stickyHeader className={style.table}>\n        <TableHead className={style.header}>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>Artists</TableCell>\n            <TableCell>Tempo</TableCell>\n            <TableCell>Acousticness</TableCell>\n            <TableCell>Danceability</TableCell>\n            <TableCell>Energy</TableCell>\n            <TableCell>Instrumentalness</TableCell>\n            <TableCell>Liveness</TableCell>\n            <TableCell>Loudness</TableCell>\n            <TableCell>Speechiness</TableCell>\n            <TableCell>Valence</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredTracks.map(track => (\n            <TableRow key={track.id}>\n              <TableCell>{track.name}</TableCell>\n              <TableCell>{track.artists.map(artist => artist.name).join(\",\")}</TableCell>\n              <TableCell>{track.tempo}</TableCell>\n              <TableCell>{track.acousticness}</TableCell>\n              <TableCell>{track.danceability}</TableCell>\n              <TableCell>{track.energy}</TableCell>\n              <TableCell>{track.instrumentalness}</TableCell>\n              <TableCell>{track.liveness}</TableCell>\n              <TableCell>{track.loudness}</TableCell>\n              <TableCell>{track.speechiness}</TableCell>\n              <TableCell>{track.valence}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","import { ApplicationState, PersonalPageState } from './state';\nimport React, { useEffect } from 'react';\nimport { getSession, handleAuthRedirect } from \"./auth\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ApplicationDispatch } from './store';\nimport { CircularProgress } from \"@material-ui/core\";\nimport Controls from \"./components/Controls/Controls\";\nimport { ExportPage } from \"./components/ExportPage/ExportPage\";\nimport { Login } from \"./components/Login/Login\";\nimport Playlists from \"./components/Playlists/Playlists\";\nimport Tracks from './components/Tracks/Tracks';\nimport style from './App.module.scss';\n\nfunction useAuth() {\n  const dispatch = useDispatch<ApplicationDispatch>();\n  useEffect(() => {\n    handleAuthRedirect();\n\n    const session = getSession();\n    if (session) {\n      dispatch({\n        type: \"SIGN_IN\",\n        value: session\n      });\n    }\n  }, [dispatch]);\n}\n\nfunction LandingPage() {\n  return (\n    <div>\n      <h1>Spotify Filter</h1>\n      <Login />\n    </div>\n  );\n}\n\nfunction SignedInApp() {\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const loadingTracks = useSelector((state: PersonalPageState) => state.loadingTracks);\n  return (\n    <div>\n      <div className={style.header}>\n        <h1 className={style.title}>Spotify Filter</h1>\n        <Login />\n      </div>\n      <div>\n        {tracks.length > 0 && <Controls />}\n        <Playlists />\n        {loadingTracks\n          ? <CircularProgress />\n          : <Tracks />\n        }\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const page = useSelector((state: ApplicationState) => state.page);\n\n  useAuth();\n\n  switch (page) {\n    case \"landing\":\n      return <LandingPage />;\n    case \"personal\":\n      return <SignedInApp />;\n    case \"export\":\n      return <ExportPage />;\n  }\n}\n\nexport default App;\n","import React, { ReactElement, ReactNode } from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { green, orange } from \"@material-ui/core/colors\"\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: green[500]\n    },\n    secondary: {\n      main: orange[500]\n    }\n  },\n  transitions: {\n    duration: {\n      shortest: 0,\n      shorter: 0,\n      short: 0,\n      standard: 0,\n      complex: 0,\n      enteringScreen: 0,\n      leavingScreen: 0\n    }\n  }\n});\n\nexport function MaterialThemeProvider(props: { children: ReactNode }): ReactElement {\n  return (\n    <ThemeProvider theme={theme}>\n      {props.children}\n    </ThemeProvider>\n  );\n}\n","import {\n  Playlist,\n  FullTrack,\n  AudioFeatures,\n  AudioFeatureKey\n} from \"./spotify_types\";\nimport { Session } from \"./auth\";\n\nexport type TrackInfo = Omit<FullTrack, \"type\"> & Omit<AudioFeatures, \"type\">;\n\ntype SessionState = { session?: Session };\n\nexport type LandingPageState = { page: \"landing\" } & SessionState;\n\nexport type AudioFeatureRange = {\n  [key in AudioFeatureKey]: [number, number]\n};\n\nexport type PersonalPageState = {\n  page: \"personal\",\n  playlists: ReadonlyArray<Playlist>,\n  selectedPlaylistId?: string,\n  loadingTracks: boolean,\n  tracks: ReadonlyArray<TrackInfo>,\n  audioFeatureRange: AudioFeatureRange\n} & Required<SessionState>;\n\nexport type ExportPageState = {\n  page: \"export\",\n  tracks: ReadonlyArray<FullTrack>,\n  newPlaylistName: string\n} & SessionState\n\nexport type ApplicationState = PersonalPageState | LandingPageState | ExportPageState;\n\nexport const INITIAL_STATE: LandingPageState = { page: \"landing\" };\n\nexport const DEFAULT_AUDIO_FEATURE_RANGE: Record<AudioFeatureKey, [number, number]> = {\n  duration_ms: [0, Infinity],\n  key: [0, Infinity],\n  mode: [0, 1],\n  time_signature: [0, Infinity],\n  acousticness: [0, 1],\n  danceability: [0, 1],\n  energy: [0, 1],\n  instrumentalness: [0, 1],\n  liveness: [0, 1],\n  loudness: [-Infinity, Infinity],\n  speechiness: [0, 1],\n  valence: [0, 1],\n  tempo: [0, Infinity]\n}\n","import { LandingPageState, ApplicationState, DEFAULT_AUDIO_FEATURE_RANGE } from \"../../state\";\nimport { Action } from \"../../action\";\n\nfunction landingPageReducer(state: LandingPageState, action: Action): ApplicationState {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      return {\n        page: \"personal\",\n        session: action.value,\n        playlists: [],\n        loadingTracks: false,\n        tracks: [],\n        audioFeatureRange: DEFAULT_AUDIO_FEATURE_RANGE,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default landingPageReducer;\n","import { Action } from \"../action\";\n\ntype Reducer<S, A extends Action> = (state: S, action: A) => S;\n\n/**\n * Create a composed reducer from individual property reducers.\n * If reducer is not provided for a property, the property is not modified.\n * @param reducers Reducers for each state property\n */\nexport function composeReducers<S>(reducers: {\n  [key in keyof S]?: Reducer<S[key], Action>\n}): Reducer<S, Action> {\n  return (state, action) => {\n    const ret = {...state};\n    for (const k in reducers) {\n      const reducer = reducers[k];\n      if (reducer) {\n        ret[k] = reducer(state[k], action);\n      }\n    }\n    return ret;\n  }\n}\n","import { Action } from \"../action\";\n\ntype Reducer<S, A extends Action> = (state: S, action: A) => S;\ntype ActionType = Action[\"type\"];\ntype ReducerObject<S> = {\n  [key in ActionType]?: Reducer<S, Extract<Action, {type: key}>>\n};\n\n/**\n * Helper function for creating a new reducer from\n * object of action handlers.\n * @param handlers A javascript object with action type as keys and handler function as value.\n */\nexport function createReducer<S>(handlers: ReducerObject<S>): Reducer<S, Action> {\n  return (state: S, action: Action) => {\n    if (handlers.hasOwnProperty(action.type)) {\n      const handler = handlers[action.type] as Reducer<S, Action>;\n      return handler(state, action);\n    }\n    return state;\n  };\n}\n","import { Playlist } from \"../../spotify_types\";\nimport { createReducer } from \"../createReducer\";\n\nexport const playlistReducer = createReducer<ReadonlyArray<Playlist>>({\n  SET_PLAYLISTS: (_, action) => action.value\n});\n","import { createReducer } from \"../createReducer\";\n\nexport const selectedPlaylistIdReducer = createReducer<string | undefined>({\n  START_FETCHING_TRACKS: (_, action) => action.playlistId\n});\n","import { createReducer } from \"../createReducer\";\n\nexport const loadingTracksReducer = createReducer<boolean>({\n  START_FETCHING_TRACKS: () => true,\n  SET_TRACKS: () => false\n});\n","import { createReducer } from \"../createReducer\";\nimport { TrackInfo } from \"../../state\";\n\nexport const tracksReducer = createReducer<ReadonlyArray<TrackInfo>>({\n  SET_TRACKS: (_, action) => action.value\n});\n","import { PersonalPageState, ApplicationState } from \"../../state\";\nimport { Action } from \"../../action\";\nimport { composeReducers } from \"../composeReducers\";\nimport { playlistReducer } from \"./playlistsReducer\";\nimport { selectedPlaylistIdReducer } from \"./selectedPlaylistIdReducer\";\nimport { loadingTracksReducer } from \"./loadingTracksReducer\";\nimport { tracksReducer } from \"./tracksReducer\";\nimport { audioFeatureRangeReducer } from \"./audioFeatureRangeReducer\";\n\nconst composedReducer = composeReducers<PersonalPageState>({\n  playlists: playlistReducer,\n  selectedPlaylistId: selectedPlaylistIdReducer,\n  loadingTracks: loadingTracksReducer,\n  tracks: tracksReducer,\n  audioFeatureRange: audioFeatureRangeReducer\n});\n\nfunction personalPageReducer(state: PersonalPageState, action: Action): ApplicationState {\n  switch (action.type) {\n    case \"SIGN_OUT\":\n      return { page: \"landing\" };\n    case \"GO_TO_EXPORT_PAGE\":\n      return {\n        page: \"export\",\n        tracks: action.tracks,\n        session: state.session,\n        newPlaylistName: \"\"\n      };\n    default:\n      return composedReducer(state, action);\n  }\n}\n\nexport default personalPageReducer;\n","import { createReducer } from \"../createReducer\";\nimport { AudioFeatureRange, DEFAULT_AUDIO_FEATURE_RANGE } from \"../../state\";\n\nexport const audioFeatureRangeReducer = createReducer<AudioFeatureRange>({\n  SET_AUDIO_FEATURE_MIN: (state, action) => ({\n    ...state,\n    [action.feature]: [\n      action.value,\n      state[action.feature][1]\n    ]\n  }),\n  SET_AUDIO_FEATURE_MAX: (state, action) => ({\n    ...state,\n    [action.feature]: [\n      state[action.feature][0],\n      action.value\n    ]\n  }),\n  RESET_AUDIO_FEATURE_RANGE: () => DEFAULT_AUDIO_FEATURE_RANGE\n});","import { ExportPageState, ApplicationState } from \"../../state\";\nimport { Action } from \"../../action\";\nimport { composeReducers } from \"../composeReducers\";\nimport { newPlaylistNameReducer } from \"./newPlaylistNameReducer\";\n\nconst composedReducer = composeReducers<ExportPageState>({\n  newPlaylistName: newPlaylistNameReducer\n});\n\nexport function exportPageReducer(state: ExportPageState, action: Action): ApplicationState {\n  return composedReducer(state, action);\n}\n","import { createReducer } from \"../createReducer\";\n\nexport const newPlaylistNameReducer = createReducer<string>({\n  SET_NEW_PLAYLIST_NAME: (_, action) => action.value\n});\n","import { createStore } from \"redux\";\nimport { Dispatch } from \"react\";\nimport { Action } from \"./action\";\nimport { reducer } from \"./reducers/reducer\";\n\nexport const store = createStore(reducer);\nexport type ApplicationDispatch = Dispatch<Action>;\n","import { ApplicationState, INITIAL_STATE } from \"../state\";\nimport { Action } from \"../action\";\nimport landingPageReducer from \"./LandingPage/landingPageReducer\";\nimport personalPageReducer from \"./PersonalPage/personalPageReducer\";\nimport { exportPageReducer } from \"./ExportPage/exportPageReducer\";\n\nexport function reducer(state: ApplicationState | undefined, action: Action): ApplicationState {\n  if (!state) {\n    return INITIAL_STATE;\n  }\n  switch(state.page) {\n    case \"landing\":\n      return landingPageReducer(state, action);\n    case \"personal\":\n      return personalPageReducer(state, action);\n    case \"export\":\n      return exportPageReducer(state, action);\n  }\n}\n","import './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { CssBaseline, StylesProvider } from \"@material-ui/core\";\n\nimport App from './App';\nimport { MaterialThemeProvider } from \"./components/MaterialTheme/MaterialTheme\";\nimport { Provider } from \"react-redux\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <StylesProvider injectFirst>\n        <MaterialThemeProvider>\n          <CssBaseline>\n            <App />\n          </CssBaseline>\n        </MaterialThemeProvider>\n      </StylesProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Controls_grid__3SsI9\",\"buttongroup\":\"Controls_buttongroup__V6tDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__1EeZa\",\"header\":\"Tracks_header__3N9mH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"title\":\"App_title__2oBiX\"};"],"sourceRoot":""}