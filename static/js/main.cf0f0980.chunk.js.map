{"version":3,"sources":["components/Controls/Controls.module.scss","config.ts","auth.ts","components/Login/Login.tsx","spotify_types.ts","filterTracks.ts","components/RangeInput/RangeInput.tsx","components/Controls/Controls.tsx","spotify.ts","hooks/useRefreshedSession.ts","components/Playlists/Playlists.tsx","components/Tracks/Tracks.tsx","components/ExportPage/ExportPage.tsx","hooks/useCancelToken.ts","App.tsx","state.ts","reducers/LandingPage/landingPageReducer.ts","reducers/composeReducers.ts","reducers/createReducer.ts","reducers/PersonalPage/playlistsReducer.ts","reducers/PersonalPage/selectedPlaylistIdReducer.ts","reducers/PersonalPage/loadingTracksReducer.ts","reducers/PersonalPage/tracksReducer.ts","reducers/PersonalPage/personalPageReducer.ts","reducers/PersonalPage/audioFeatureRangeReducer.ts","reducers/ExportPage/exportPageReducer.ts","reducers/ExportPage/newPlaylistNameReducer.ts","store.ts","reducers/reducer.ts","serviceWorker.ts","index.tsx","components/Tracks/Tracks.module.scss","components/RangeInput/RangeInput.module.scss","components/Playlists/Playlists.module.scss"],"names":["module","exports","CLIENT_ID","TOKEN_ENDPOINT","API_ROOT","REQUESTED_SCOPES","join","getCurrentPageUri","window","location","protocol","host","pathname","generateRandomString","array","Uint32Array","crypto","getRandomValues","Array","from","dec","toString","substr","signIn","a","state","localStorage","setItem","pkceChallenge","code_verifier","code_challenge","url","URL","searchParams","append","assign","params","href","code","get","getItem","Error","codeVerifier","removeItem","body","URLSearchParams","axios","post","headers","then","res","data","access_token","Date","now","parseFloat","expires_in","refresh_token","catch","e","console","error","alert","finally","refreshToken","response","nextAccessToken","nextRefreshToken","nextTtl","nextAccessTokenExpiry","isNaN","accessToken","accessTokenExpiry","Login","session","useSelector","dispatch","useDispatch","onClick","type","AudioFeatureKey","filterTracks","tracks","range","filter","track","feature","RangeInput","label","lowerLimit","upperLimit","step","minValue","maxValue","setMinValue","setMaxValue","className","style","fieldset","group","min","max","value","onChange","parsed","target","Number","NormalizedRangeInput","useMemo","ret","replace","toUpperCase","slice","x","NORMALIZED_FEATURES_TO_CONTROL","Controls","audioFeatureRange","map","tempo","reduce","b","Math","floor","ceil","Infinity","minTrackTempo","maxTrackTempo","container","key","t","splitIntoBatches","arr","batchSize","i","length","push","timeout","ms","Promise","resolve","setTimeout","accessTokenToHeader","rateLimitedRequest","requestConfig","maxRetry","status","timer","getAllPages","cancelToken","nextUrl","items","method","item","next","getOne","getMe","me","id","playlistId","batches","batch","ids","audio_features","createPlaylist","playlistName","trackUris","creationUrl","JSON","stringify","name","public","creationRes","additionUrl","uris","useRefreshedSession","currentSessionPromise","refresh","refreshedSession","playlists","selectedPlaylistId","useEffect","cancelTokenSource","CancelToken","source","getUserPlaylists","token","isCancel","cancel","getPlaylistTracks","playlist","selectPlaylist","trackMap","Map","filteredTracks","values","table","header","row","artists","artist","acousticness","danceability","energy","instrumentalness","liveness","loudness","speechiness","valence","ExportPage","newPlaylistName","useCancelToken","uri","useAuth","handleAuthRedirect","getSession","SignedInApp","loadingTracks","Playlists","Tracks","App","page","INITIAL_STATE","DEFAULT_AUDIO_FEATURE_RANGE","duration_ms","mode","time_signature","landingPageReducer","action","composeReducers","reducers","k","reducer","createReducer","handlers","hasOwnProperty","handler","playlistReducer","SET_PLAYLISTS","_","selectedPlaylistIdReducer","START_FETCHING_TRACKS","loadingTracksReducer","SET_TRACKS","tracksReducer","composedReducer","SET_AUDIO_FEATURE_MIN","SET_AUDIO_FEATURE_MAX","RESET_AUDIO_FEATURE_RANGE","personalPageReducer","SET_NEW_PLAYLIST_NAME","store","createStore","exportPageReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cf0f0980.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Controls_container__1ewYX\"};","/**\n * Spotify application client id.\n */\nexport const CLIENT_ID = \"7a3bed1acbc948829fdb043e52b845b8\";\n\n/**\n * Spotify authorization endpoint.\n */\nexport const AUTHORIZATION_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n\n/**\n * Spotify token endpoint.\n */\nexport const TOKEN_ENDPOINT = \"https://accounts.spotify.com/api/token\";\n\n/**\n * Spotify API root.\n */\nexport const API_ROOT = \"https://api.spotify.com/v1\";\n\n/**\n * Space separated list of scopes.\n */\nexport const REQUESTED_SCOPES = [\n  \"playlist-read-private\",\n  \"playlist-modify-private\",\n  \"playlist-modify-public\"\n].join(\" \");\n\n","import axios from \"axios\";\nimport pkceChallenge from \"pkce-challenge\";\nimport { CLIENT_ID, AUTHORIZATION_ENDPOINT, TOKEN_ENDPOINT, REQUESTED_SCOPES } from \"./config\";\n\nexport type Session = {\n  accessToken: string,\n  accessTokenExpiry: number,\n  refreshToken: string\n};\n\n/**\n * Get URI of the current page.\n */\nfunction getCurrentPageUri() {\n  return window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n}\n\n/**\n * Generate a random string\n * to be used for Auth state.\n */\nfunction generateRandomString() {\n  let array = new Uint32Array(28);\n  window.crypto.getRandomValues(array);\n  return Array.from(\n    array,\n    dec => (\"0\" + dec.toString(16)).substr(-2)\n  ).join(\"\");\n}\n\n/**\n * Begin sign-in process.\n */\nexport async function signIn() {\n  const state = generateRandomString();\n  localStorage.setItem(\"pkce-state\", state);\n\n  const { code_verifier, code_challenge } = pkceChallenge();\n  localStorage.setItem(\"pkce-code-verifier\", code_verifier);\n\n  const url = new URL(AUTHORIZATION_ENDPOINT);\n  url.searchParams.append(\"response_type\", \"code\");\n  url.searchParams.append(\"client_id\", CLIENT_ID);\n  url.searchParams.append(\"state\", state);\n  url.searchParams.append(\"scope\", REQUESTED_SCOPES);\n  url.searchParams.append(\"redirect_uri\", getCurrentPageUri());\n  url.searchParams.append(\"code_challenge\", code_challenge);\n  url.searchParams.append(\"code_challenge_method\", \"S256\");\n\n  // Redirect to auth page.\n  window.location.assign(url.toString());\n}\n\n/**\n * Discard user credentials.\n */\nexport function signOut() {\n  localStorage.removeItem(\"access-token\");\n  localStorage.removeItem(\"access-token-expiry\");\n  localStorage.removeItem(\"refresh-token\");\n}\n\n/**\n * Handle user redirected from auth server.\n */\nexport async function handleAuthRedirect() {\n  const params = new URL(window.location.href).searchParams;\n  const code = params.get(\"code\");\n  const state = params.get(\"state\");\n  if (code) {\n    // Verify state.\n    if (localStorage.getItem(\"pkce-state\") !== state) {\n      throw new Error(\"Invalid state returned from auth server.\");\n    }\n\n    const codeVerifier = localStorage.getItem(\"pkce-code-verifier\");\n    if (!codeVerifier) {\n      throw new Error(\"Missing local code verifier.\");\n    }\n\n    // Remove state & code verifier from local storage.\n    localStorage.removeItem(\"pkce-state\");\n    localStorage.removeItem(\"pkce-code-verifier\");\n\n    const body = new URLSearchParams();\n    body.append(\"client_id\", CLIENT_ID);\n    body.append(\"grant_type\", \"authorization_code\");\n    body.append(\"code\", code);\n    body.append(\"redirect_uri\", getCurrentPageUri());\n    body.append(\"code_verifier\", codeVerifier);\n\n    // Request access token.\n    axios.post(\n      TOKEN_ENDPOINT,\n      body.toString(),\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n        }\n      }\n    ).then(res => {\n      localStorage.setItem(\"access-token\", res.data.access_token);\n      localStorage.setItem(\"access-token-expiry\", (Date.now() + 1000 * parseFloat(res.data.expires_in)).toString());\n      localStorage.setItem(\"refresh-token\", res.data.refresh_token);\n    }).catch(e => {\n      console.error(e);\n      alert(\"Login Failed.\");\n    }).finally(() => {\n      window.location.href = getCurrentPageUri();\n    });\n  }\n}\n\n/**\n * Asynchronously request new access token.\n * @param refreshToken Spotify refresh token\n */\nexport async function refresh(refreshToken: string): Promise<Session> {\n  const body = new URLSearchParams();\n  body.append(\"grant_type\", \"refresh_token\");\n  body.append(\"refresh_token\", refreshToken);\n  body.append(\"client_id\", CLIENT_ID);\n  const response = await axios.post(\n    TOKEN_ENDPOINT,\n    body.toString(),\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n      }\n    }\n  );\n  const [nextAccessToken, nextRefreshToken, nextTtl] = [response.data.access_token, response.data.refresh_token, response.data.expires_in];\n  const nextAccessTokenExpiry = Date.now() + 1000 * parseFloat(nextTtl);\n  if (typeof nextAccessToken !== \"string\" || typeof nextRefreshToken !== \"string\" || isNaN(nextAccessTokenExpiry)) {\n    throw new Error(\"Invalid response from auth server.\");\n  }\n  localStorage.setItem(\"access-token\", nextAccessToken);\n  localStorage.setItem(\"access-token-expiry\", nextAccessTokenExpiry.toString());\n  localStorage.setItem(\"refresh-token\", nextRefreshToken);\n  return {\n    accessToken: nextAccessToken,\n    accessTokenExpiry: nextAccessTokenExpiry,\n    refreshToken: nextRefreshToken\n  };\n}\n\n/**\n * @returns Session information saved in local storage.\n */\nexport function getSession(): Session | null {\n  const accessToken = localStorage.getItem(\"access-token\");\n  const refreshToken = localStorage.getItem(\"refresh-token\");\n  const accessTokenExpiry = parseFloat(localStorage.getItem(\"access-token-expiry\") || \"\");\n  if (accessToken && refreshToken && accessTokenExpiry) {\n    return { accessToken, accessTokenExpiry, refreshToken };\n  }\n  return null;\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../../state\";\nimport { ApplicationDispatch } from \"../../store\";\nimport { signIn, signOut } from \"../../auth\";\n\nexport function Login() {\n  const session = useSelector((state: ApplicationState) => state.session);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  function handleSignOut() {\n    signOut();\n    dispatch({ type: \"SIGN_OUT\" });\n  }\n\n  return (\n    <div>\n      {session\n        ? <button onClick={handleSignOut}>Sign Out</button>\n        : <button onClick={signIn}>Sign In With Spotify</button>\n      }\n    </div>\n  );\n}","export type Paging<T> = {\n  href: string,\n  items: T[],\n  limit: number,\n  next: string | null,\n  offset: number,\n  previous: string | null,\n  total: number\n};\n\nexport type ExternalUrl = {\n  [key: string]: string\n};\n\nexport type ExternalId = {\n  [key: string]: string\n};\n\nexport type Followers = {\n  href: string | null,\n  total: number\n};\n\nexport type Image = {\n  height: number | undefined | null,\n  width: number | undefined | null,\n  url: string\n};\n\nexport type PublicUser = {\n  display_name: string | null,\n  external_urls: ExternalUrl,\n  followers: Followers,\n  href: string,\n  id: string,\n  images: Image[],\n  type: \"user\",\n  uri: string\n}\n\nexport type PrivateUser = PublicUser & {\n  country: string,\n  email: string,\n  product: string,\n};\n\nexport type Playlist = {\n  collaborative: boolean,\n  description: string | null,\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  images: Image[],\n  name: string,\n  owner: PublicUser,\n  public: boolean | null,\n  snapshot_id: string,\n  tracks: {\n    href: string,\n    total: number\n  } | null,\n  type: \"playlist\",\n  uri: string\n};\n\nexport type SimplifiedArtist = {\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  name: string,\n  type: \"artist\",\n  uri: string\n};\n\nexport type SimplifiedAlbum = {\n  album_group: string | undefined,\n  album_type: \"album\" | \"single\" | \"compilation\",\n  artists: SimplifiedArtist[],\n  available_markets: string[],\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  images: Image[],\n  name: string,\n  release_date: string,\n  release_date_precision: \"year\" | \"month\" | \"day\",\n  restrictions: { reason: string },\n  type: \"album\",\n  uri: string\n};\n\nexport type SimplifiedTrack = {\n  artists: SimplifiedArtist[],\n  available_markets: string[],\n  disc_number: number,\n  duration_ms: number,\n  explicit: boolean,\n  external_urls: ExternalUrl,\n  href: string,\n  id: string,\n  is_playable: boolean,\n  restrictions: { reason: string },\n  name: string,\n  preview_url: string | null,\n  track_number: number,\n  type: \"track\",\n  uri: string,\n  is_local: boolean\n};\n\nexport type FullTrack = SimplifiedTrack & {\n  album: SimplifiedAlbum,\n  external_ids: ExternalId,\n  popularity: number\n}\n\nexport type PlaylistTrack = {\n  added_at: string | null,\n  added_by: PublicUser,\n  is_local: boolean,\n  track: FullTrack\n};\n\nexport const AudioFeatureKey = [\n  \"duration_ms\",\n  \"key\",\n  \"mode\",\n  \"time_signature\",\n  \"acousticness\",\n  \"danceability\",\n  \"energy\",\n  \"instrumentalness\",\n  \"liveness\",\n  \"loudness\",\n  \"speechiness\",\n  \"valence\",\n  \"tempo\"\n] as const;\n\nexport type AudioFeatureKey = typeof AudioFeatureKey[number];\n\nexport type AudioFeatures = {\n  id: string,\n  uri: string,\n  track_href: string,\n  analysis_url: string,\n  type: \"audio_features\"\n} & {\n  [key in AudioFeatureKey]: number\n};\n","import { AudioFeatureKey } from \"./spotify_types\";\nimport { TrackInfo, AudioFeatureRange } from \"./state\";\n\n/**\n * Filter tracks by audio feature ranges.\n * @param tracks Array of track info.\n * @param range Filter criteria.\n */\nexport function filterTracks(tracks: ReadonlyArray<TrackInfo>, range: AudioFeatureRange): ReadonlyArray<TrackInfo> {\n  return tracks.filter(track => {\n    for (const feature of AudioFeatureKey) {\n      if (track[feature] < range[feature][0] || track[feature] > range[feature][1]) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n","import React from \"react\";\nimport style from \"./RangeInput.module.scss\";\n\ntype RangeInputProps = {\n  label: string,\n  lowerLimit: number,\n  upperLimit: number,\n  step: number,\n  minValue: number,\n  maxValue: number\n  setMinValue: (value: number) => void,\n  setMaxValue: (value: number) => void\n};\n\nfunction RangeInput({\n  label,\n  lowerLimit,\n  upperLimit,\n  step,\n  minValue,\n  maxValue,\n  setMinValue,\n  setMaxValue\n}: RangeInputProps) {\n  return (\n    <fieldset className={style.fieldset}>\n      <legend>{label}</legend>\n      <div className={style.group}>\n        <div>Min ({minValue})</div>\n        <input\n          type=\"range\"\n          min={lowerLimit}\n          max={upperLimit}\n          step={step}\n          value={minValue}\n          onChange={e => {\n            let parsed = parseFloat(e.target.value);\n            if (Number.isNaN(parsed)) {\n              parsed = 0;\n            }\n            setMinValue(parsed);\n          }}/>\n        <div>Max ({maxValue})</div>\n        <input\n          type=\"range\"\n          min={lowerLimit}\n          max={upperLimit}\n          step={step}\n          value={maxValue}\n          onChange={e => {\n            let parsed = parseFloat(e.target.value);\n            if (Number.isNaN(parsed)) {\n              parsed = 0;\n            }\n            setMaxValue(parsed);\n          }}/>\n      </div>\n    </fieldset>\n  );\n}\n\nexport default RangeInput;\n","import React, { useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ApplicationDispatch } from \"../../store\";\nimport { PersonalPageState } from \"../../state\";\nimport { filterTracks } from \"../../filterTracks\";\nimport RangeInput from \"../RangeInput/RangeInput\";\nimport style from \"./Controls.module.scss\";\nimport { AudioFeatureKey } from \"../../spotify_types\";\n\ntype NormalizedRangeInputProps = {\n  feature: AudioFeatureKey\n  range: [number, number],\n  dispatch: ApplicationDispatch\n};\n\n/**\n * RangeInput Component for Audio Features with Range 0 to 1.\n */\nfunction NormalizedRangeInput({ feature, range, dispatch }: NormalizedRangeInputProps) {\n  const label = useMemo(() => {\n    const ret = feature.replace(\"_\", \" \");\n    return ret[0].toUpperCase() + ret.slice(1);\n  }, [feature]);\n  return (\n    <RangeInput\n      label={label}\n      lowerLimit={0}\n      upperLimit={1}\n      step={0.01}\n      minValue={range[0]}\n      maxValue={range[1]}\n      setMinValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MIN\", feature, value: x })}\n      setMaxValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MAX\", feature, value: x })}\n    />\n  );\n}\n\nconst NORMALIZED_FEATURES_TO_CONTROL: ReadonlyArray<AudioFeatureKey> = [\n  \"acousticness\",\n  \"danceability\",\n  \"energy\",\n  \"instrumentalness\",\n  \"liveness\",\n  \"speechiness\",\n  \"valence\"\n];\n\nfunction Controls() {\n  const range = useSelector((state: PersonalPageState) => state.audioFeatureRange);\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  const [minTrackTempo, maxTrackTempo] = useMemo(\n    () => tracks.map(track => track.tempo).reduce((a, b) => [Math.min(a[0], Math.floor(b)), Math.max(a[1], Math.ceil(b))], [Infinity, -Infinity]),\n    [tracks]\n  );\n\n  function handleExport() {\n    dispatch({\n      type: \"GO_TO_EXPORT_PAGE\",\n      tracks: filterTracks(tracks, range).map(t => ({...t, type: \"track\"}))\n    });\n  }\n\n  return (\n    <div>\n      <h3>Controls</h3>\n      <div className={style.container}>\n        <RangeInput\n          label=\"Tempo (BPM)\"\n          lowerLimit={minTrackTempo}\n          upperLimit={maxTrackTempo}\n          step={1}\n          minValue={range.tempo[0]}\n          maxValue={Math.min(range.tempo[1], maxTrackTempo)}\n          setMinValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MIN\", feature: \"tempo\", value: x })}\n          setMaxValue={x => dispatch({ type: \"SET_AUDIO_FEATURE_MAX\", feature: \"tempo\", value: x })}\n        />\n        {NORMALIZED_FEATURES_TO_CONTROL.map(feature => (\n          <NormalizedRangeInput\n            key={feature}\n            feature={feature}\n            dispatch={dispatch}\n            range={range[feature]}\n          />\n        ))}\n      </div>\n      <button onClick={() => dispatch({ type: \"RESET_AUDIO_FEATURE_RANGE\" })}>\n        Reset Filters\n      </button>\n      <button onClick={handleExport}>\n        Export Tracks\n      </button>\n    </div>\n  );\n}\n\nexport default Controls;\n","import axios, { CancelToken, AxiosRequestConfig } from \"axios\";\nimport { TrackInfo } from \"./state\";\nimport { API_ROOT } from \"./config\";\nimport {\n  Paging,\n  PrivateUser,\n  Playlist,\n  PlaylistTrack,\n  AudioFeatures\n} from \"./spotify_types\";\n\nfunction splitIntoBatches<T>(arr: ReadonlyArray<T>, batchSize: number = 30): ReadonlyArray<ReadonlyArray<T>> {\n  let i = 0;\n  const ret: Array<Array<T>> = [];\n  while (arr.length > i) {\n    ret.push(arr.slice(i, i + batchSize));\n    i += batchSize;\n  }\n  return ret;\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Format access token to http bearer authorization header.\n * @param accessToken Spotify access token.\n */\nfunction accessTokenToHeader(accessToken: string): { \"Authorization\": string } {\n  return { \"Authorization\": `Bearer ${accessToken}` };\n}\n\n/**\n * Send HTTP request to Spotify and handle rate-limited message.\n * @param requestConfig Config for axios request.\n * @param maxRetry Max number of trial before throwing error.\n */\nasync function rateLimitedRequest<T>(requestConfig: AxiosRequestConfig, maxRetry: number = 3): Promise<T> {\n  for (let i = 0; i < maxRetry; i++) {\n    const res = await axios(requestConfig);\n    if (Math.floor(res.status / 100) === 2) {\n      // Status code is 200 - 299.\n      return res.data;\n    }\n    if (res.status === 429) {\n      const timer = parseFloat(res.headers[\"retry-after\"]);\n      if (isNaN(timer)) {\n        throw new Error(\"Status code 429 but missing retry-after header.\");\n      }\n      await timeout(timer * 1000);\n    }\n  }\n  throw new Error(`Failed to get response after ${maxRetry} retries.`);\n}\n\nasync function getAllPages<T>(url: string, accessToken: string, cancelToken: CancelToken): Promise<T[]> {\n  let nextUrl: string | null = url;\n  const items: T[] = [];\n  while (nextUrl) {\n    const res: Paging<T> = await rateLimitedRequest<Paging<T>>({\n      method: \"GET\",\n      url: nextUrl,\n      headers: accessTokenToHeader(accessToken),\n      cancelToken\n    });\n    for (let item of res.items) {\n      items.push(item);\n    }\n    nextUrl = res.next;\n  }\n  return items;\n}\n\nasync function getOne<T>(url: string, accessToken: string, cancelToken: CancelToken): Promise<T> {\n  return rateLimitedRequest<T>({\n    method: \"GET\",\n    url,\n    headers: accessTokenToHeader(accessToken),\n    cancelToken\n  });\n}\n\nexport async function getMe(accessToken: string, cancelToken: CancelToken): Promise<PrivateUser> {\n  const url = `${API_ROOT}/me`;\n  return getOne(url, accessToken, cancelToken);\n}\n\nexport async function getUserPlaylists(accessToken: string, cancelToken: CancelToken): Promise<Playlist[]> {\n  const me = await getMe(accessToken, cancelToken);\n  const url = `${API_ROOT}/users/${me.id}/playlists`;\n  return getAllPages(url, accessToken, cancelToken);\n}\n\nexport async function getPlaylistTracks(playlistId: string, accessToken: string, cancelToken: CancelToken): Promise<Array<TrackInfo>> {\n  const url = `${API_ROOT}/playlists/${playlistId}/tracks`;\n  const tracks = await getAllPages<PlaylistTrack>(url, accessToken, cancelToken);\n  const batches = splitIntoBatches(tracks, 40);\n  const ret: Array<TrackInfo> = [];\n\n  for (let batch of batches) {\n    const ids = batch.map(t => t.track.id);\n    const url = `${API_ROOT}/audio-features/?ids=${ids.join(\",\")}`;\n    const { audio_features } = await getOne<{\"audio_features\": AudioFeatures[]}>(url, accessToken, cancelToken);\n    for (let i = 0; i < batch.length; i++) {\n      ret.push({...batch[i].track, ...audio_features[i]});\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Create a new Spotify playlist and add tracks.\n * @param playlistName Name of new playlist.\n * @param trackUris Spotify URI of tracks to be added.\n * @param accessToken Spotify access token.\n * @param cancelToken Axios cancel token.\n */\nexport async function createPlaylist(playlistName: string, trackUris: ReadonlyArray<string>, accessToken: string, cancelToken: CancelToken): Promise<void> {\n  if (trackUris.length > 100) {\n    throw new Error(\"Cannot add more than 100 items at a time.\");\n  }\n\n  const me = await getMe(accessToken, cancelToken);\n  const creationUrl = `${API_ROOT}/users/${me.id}/playlists`;\n  const creationRes = await rateLimitedRequest<Playlist>({\n    method: \"POST\",\n    url: creationUrl,\n    headers: accessTokenToHeader(accessToken),\n    data: JSON.stringify({\n      name: playlistName,\n      public: false\n    })\n  });\n  const additionUrl = `${API_ROOT}/playlists/${creationRes.id}/tracks`;\n  await rateLimitedRequest({\n    method: \"POST\",\n    url: additionUrl,\n    headers: accessTokenToHeader(accessToken),\n    params: {\n      uris: trackUris.join(\",\")\n    }\n  });\n}\n","import { Session, refresh } from \"../auth\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ApplicationState } from \"../state\";\nimport { ApplicationDispatch } from \"../store\";\nimport { useMemo } from \"react\";\n\n/**\n * React hook to produce a promise of refreshed session based on current session.\n */\nexport function useRefreshedSession(): Promise<Session> {\n  const session = useSelector((state: ApplicationState) => state.session);\n  const dispatch = useDispatch<ApplicationDispatch>();\n\n  // Memoize promise of current session.\n  const currentSessionPromise = useMemo(async () => {\n    if (!session) {\n      throw new Error(\"No session to refresh.\");\n    }\n    return session;\n  }, [session]);\n\n  // Refresh session if less than 1 minute until expiry.\n  if (session && session.accessTokenExpiry - Date.now() < 60 * 1000) {\n    return refresh(session.refreshToken).then(refreshedSession => {\n      dispatch({\n        type: \"SIGN_IN\",\n        value: refreshedSession\n      });\n      return refreshedSession;\n    }, e => {\n      console.error(`Failed to refresh session: ${e}`);\n      dispatch({ type: \"SIGN_OUT\" });\n      return currentSessionPromise;\n    });\n  }\n\n  return currentSessionPromise;\n}\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getUserPlaylists, getPlaylistTracks } from \"../../spotify\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ApplicationDispatch } from \"../../store\";\nimport { PersonalPageState } from \"../../state\";\nimport style from \"./Playlists.module.scss\";\nimport { useRefreshedSession } from \"../../hooks/useRefreshedSession\";\n\nexport default function() {\n  const refreshedSession = useRefreshedSession();\n  const playlists = useSelector((state: PersonalPageState) => state.playlists);\n  const selectedPlaylistId = useSelector((state: PersonalPageState) => state.selectedPlaylistId);\n  const dispatch = useDispatch<ApplicationDispatch>();\n  useEffect(() => {\n    const cancelTokenSource = axios.CancelToken.source();\n    refreshedSession.then(\n      ({ accessToken }) => getUserPlaylists(accessToken, cancelTokenSource.token)\n    ).then(playlists => {\n      dispatch({\n        type: \"SET_PLAYLISTS\",\n        value: playlists\n      });\n    }).catch(e => {\n      if (!axios.isCancel(e)) {\n        console.error(`Failed to fetch user playlists: ${e}`);\n      }\n    });\n    return () => cancelTokenSource.cancel();\n  }, [refreshedSession, dispatch]);\n\n  // Load tracks from selected playlist.\n  useEffect(() => {\n    if (selectedPlaylistId) {\n      const cancelTokenSource = axios.CancelToken.source();\n      refreshedSession.then(\n        ({ accessToken }) => getPlaylistTracks(selectedPlaylistId, accessToken, cancelTokenSource.token)\n      ).then(tracks => dispatch({\n        type: \"SET_TRACKS\",\n        value: tracks\n      })).catch(e => {\n        if (!axios.isCancel(e)) {\n          console.error(`Failed to fetch playlist tracks: ${e}`);\n        }\n      });\n\n      return () => cancelTokenSource.cancel();\n    }\n  }, [selectedPlaylistId, refreshedSession, dispatch]);\n\n  async function selectPlaylist(id: string) {\n    dispatch({\n      type: \"START_FETCHING_TRACKS\",\n      playlistId: id\n    });\n  }\n\n  return (\n    <div>\n      <h3>Playlists</h3>\n      <div className={style.container}>\n        {playlists.map(playlist => (\n          <div\n            key={playlist.id}\n            className={style.item}\n            onClick={() => selectPlaylist(playlist.id)}\n          >\n            {playlist.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { PersonalPageState } from \"../../state\";\nimport { filterTracks } from \"../../filterTracks\";\nimport style from \"./Tracks.module.scss\";\n\nexport default function() {\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const range = useSelector((state: PersonalPageState) => state.audioFeatureRange);\n\n  const trackMap = useMemo(\n    () => new Map(tracks.map(track => [track.id, track])),\n    [tracks]\n  );\n\n  const filteredTracks = useMemo(\n    () => filterTracks(Array.from(trackMap.values()), range),\n    [trackMap, range]\n  );\n\n  return (\n    <div>\n      <h3>Tracks ({filteredTracks.length})</h3>\n      <table className={style.table}>\n        <thead>\n          <tr className={style.header}>\n            <th>Title</th>\n            <th>Artists</th>\n            <th>Tempo</th>\n            <th>Acousticness</th>\n            <th>Danceability</th>\n            <th>Energy</th>\n            <th>Instrumentalness</th>\n            <th>Liveness</th>\n            <th>Loudness</th>\n            <th>Speechiness</th>\n            <th>Valence</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredTracks.map(track => (\n            <tr key={track.id} className={style.row}>\n              <td>{track.name}</td>\n              <td>{track.artists.map(artist => artist.name).join(\",\")}</td>\n              <td>{track.tempo}</td>\n              <td>{track.acousticness}</td>\n              <td>{track.danceability}</td>\n              <td>{track.energy}</td>\n              <td>{track.instrumentalness}</td>\n              <td>{track.liveness}</td>\n              <td>{track.loudness}</td>\n              <td>{track.speechiness}</td>\n              <td>{track.valence}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ExportPageState } from \"../../state\";\nimport { ApplicationDispatch } from \"../../store\";\nimport { createPlaylist } from \"../../spotify\";\nimport { useRefreshedSession } from \"../../hooks/useRefreshedSession\";\nimport { useCancelToken } from \"../../hooks/useCancelToken\";\n\nexport function ExportPage() {\n  const refreshedSession = useRefreshedSession();\n  const tracks = useSelector((state: ExportPageState) => state.tracks);\n  const newPlaylistName = useSelector((state: ExportPageState) => state.newPlaylistName);\n  const dispatch = useDispatch<ApplicationDispatch>();\n  const cancelToken = useCancelToken();\n\n\n  async function handleExport() {\n    const { accessToken } = await refreshedSession;\n    await createPlaylist(\n      newPlaylistName,\n      tracks.map(track => track.uri),\n      accessToken,\n      cancelToken\n    );\n    alert(\"Export Complete!\");\n  }\n\n  return (\n    <div>\n      Export Page\n      <p>New Playlist Name</p>\n      <input type=\"text\" value={newPlaylistName} onChange={e => dispatch({ type: \"SET_NEW_PLAYLIST_NAME\", value: e.target.value })} />\n      <button onClick={handleExport}>Export</button>\n    </div>\n  );\n}\n","import axios, { CancelToken } from \"axios\";\nimport { useEffect } from \"react\";\n\n/**\n * Create an axios cancel token that cancels upon unmount.\n */\nexport function useCancelToken(): CancelToken {\n  const source = axios.CancelToken.source();\n\n  // Cancel upon unmount.\n  useEffect(() => {\n    return () => source.cancel();\n  }, [source]);\n\n  return source.token;\n}\n","import React, { useEffect } from 'react';\nimport { Login } from \"./components/Login/Login\";\nimport Controls from \"./components/Controls/Controls\";\nimport Playlists from \"./components/Playlists/Playlists\";\nimport Tracks from './components/Tracks/Tracks';\nimport { ExportPage } from \"./components/ExportPage/ExportPage\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ApplicationState, PersonalPageState } from './state';\nimport { handleAuthRedirect, getSession } from \"./auth\";\nimport { ApplicationDispatch } from './store';\n\nfunction useAuth() {\n  const dispatch = useDispatch<ApplicationDispatch>();\n  useEffect(() => {\n    handleAuthRedirect();\n\n    const session = getSession();\n    if (session) {\n      dispatch({\n        type: \"SIGN_IN\",\n        value: session\n      });\n    }\n  }, [dispatch]);\n}\n\nfunction SignedInApp() {\n  const tracks = useSelector((state: PersonalPageState) => state.tracks);\n  const loadingTracks = useSelector((state: PersonalPageState) => state.loadingTracks);\n  return (\n    <div>\n      {tracks.length > 0 && <Controls />}\n      <Playlists />\n      {loadingTracks\n        ? <p>Loading...</p>\n        : <Tracks />\n      }\n    </div>\n  );\n}\n\nfunction App() {\n  const page = useSelector((state: ApplicationState) => state.page);\n\n  useAuth();\n\n  switch (page) {\n    case \"landing\":\n      return (\n        <div>\n          <h1>Spotify Filter</h1>\n          <Login />\n        </div>\n      );\n    case \"personal\":\n      return (\n        <div>\n          <h1>Spotify Filter</h1>\n          <Login />\n          <SignedInApp />\n        </div>\n      );\n    case \"export\":\n      return <ExportPage />;\n  }\n}\n\nexport default App;\n","import {\n  Playlist,\n  FullTrack,\n  AudioFeatures,\n  AudioFeatureKey\n} from \"./spotify_types\";\nimport { Session } from \"./auth\";\n\nexport type TrackInfo = Omit<FullTrack, \"type\"> & Omit<AudioFeatures, \"type\">;\n\ntype SessionState = { session?: Session };\n\nexport type LandingPageState = { page: \"landing\" } & SessionState;\n\nexport type AudioFeatureRange = {\n  [key in AudioFeatureKey]: [number, number]\n};\n\nexport type PersonalPageState = {\n  page: \"personal\",\n  playlists: ReadonlyArray<Playlist>,\n  selectedPlaylistId?: string,\n  loadingTracks: boolean,\n  tracks: ReadonlyArray<TrackInfo>,\n  audioFeatureRange: AudioFeatureRange\n} & Required<SessionState>;\n\nexport type ExportPageState = {\n  page: \"export\",\n  tracks: ReadonlyArray<FullTrack>,\n  newPlaylistName: string\n} & SessionState\n\nexport type ApplicationState = PersonalPageState | LandingPageState | ExportPageState;\n\nexport const INITIAL_STATE: LandingPageState = { page: \"landing\" };\n\nexport const DEFAULT_AUDIO_FEATURE_RANGE: Record<AudioFeatureKey, [number, number]> = {\n  duration_ms: [0, Infinity],\n  key: [0, Infinity],\n  mode: [0, 1],\n  time_signature: [0, Infinity],\n  acousticness: [0, 1],\n  danceability: [0, 1],\n  energy: [0, 1],\n  instrumentalness: [0, 1],\n  liveness: [0, 1],\n  loudness: [-Infinity, Infinity],\n  speechiness: [0, 1],\n  valence: [0, 1],\n  tempo: [0, Infinity]\n}\n","import { LandingPageState, ApplicationState, DEFAULT_AUDIO_FEATURE_RANGE } from \"../../state\";\nimport { Action } from \"../../action\";\n\nfunction landingPageReducer(state: LandingPageState, action: Action): ApplicationState {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      return {\n        page: \"personal\",\n        session: action.value,\n        playlists: [],\n        loadingTracks: false,\n        tracks: [],\n        audioFeatureRange: DEFAULT_AUDIO_FEATURE_RANGE,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default landingPageReducer;\n","import { Action } from \"../action\";\n\ntype Reducer<S, A extends Action> = (state: S, action: A) => S;\n\n/**\n * Create a composed reducer from individual property reducers.\n * If reducer is not provided for a property, the property is not modified.\n * @param reducers Reducers for each state property\n */\nexport function composeReducers<S>(reducers: {\n  [key in keyof S]?: Reducer<S[key], Action>\n}): Reducer<S, Action> {\n  return (state, action) => {\n    const ret = {...state};\n    for (const k in reducers) {\n      const reducer = reducers[k];\n      if (reducer) {\n        ret[k] = reducer(state[k], action);\n      }\n    }\n    return ret;\n  }\n}\n","import { Action } from \"../action\";\n\ntype Reducer<S, A extends Action> = (state: S, action: A) => S;\ntype ActionType = Action[\"type\"];\ntype ReducerObject<S> = {\n  [key in ActionType]?: Reducer<S, Extract<Action, {type: key}>>\n};\n\n/**\n * Helper function for creating a new reducer from\n * object of action handlers.\n * @param handlers A javascript object with action type as keys and handler function as value.\n */\nexport function createReducer<S>(handlers: ReducerObject<S>): Reducer<S, Action> {\n  return (state: S, action: Action) => {\n    if (handlers.hasOwnProperty(action.type)) {\n      const handler = handlers[action.type] as Reducer<S, Action>;\n      return handler(state, action);\n    }\n    return state;\n  };\n}\n","import { Playlist } from \"../../spotify_types\";\nimport { createReducer } from \"../createReducer\";\n\nexport const playlistReducer = createReducer<ReadonlyArray<Playlist>>({\n  SET_PLAYLISTS: (_, action) => action.value\n});\n","import { createReducer } from \"../createReducer\";\n\nexport const selectedPlaylistIdReducer = createReducer<string | undefined>({\n  START_FETCHING_TRACKS: (_, action) => action.playlistId\n});\n","import { createReducer } from \"../createReducer\";\n\nexport const loadingTracksReducer = createReducer<boolean>({\n  START_FETCHING_TRACKS: () => true,\n  SET_TRACKS: () => false\n});\n","import { createReducer } from \"../createReducer\";\nimport { TrackInfo } from \"../../state\";\n\nexport const tracksReducer = createReducer<ReadonlyArray<TrackInfo>>({\n  SET_TRACKS: (_, action) => action.value\n});\n","import { PersonalPageState, ApplicationState } from \"../../state\";\nimport { Action } from \"../../action\";\nimport { composeReducers } from \"../composeReducers\";\nimport { playlistReducer } from \"./playlistsReducer\";\nimport { selectedPlaylistIdReducer } from \"./selectedPlaylistIdReducer\";\nimport { loadingTracksReducer } from \"./loadingTracksReducer\";\nimport { tracksReducer } from \"./tracksReducer\";\nimport { audioFeatureRangeReducer } from \"./audioFeatureRangeReducer\";\n\nconst composedReducer = composeReducers<PersonalPageState>({\n  playlists: playlistReducer,\n  selectedPlaylistId: selectedPlaylistIdReducer,\n  loadingTracks: loadingTracksReducer,\n  tracks: tracksReducer,\n  audioFeatureRange: audioFeatureRangeReducer\n});\n\nfunction personalPageReducer(state: PersonalPageState, action: Action): ApplicationState {\n  switch (action.type) {\n    case \"SIGN_OUT\":\n      return { page: \"landing\" };\n    case \"GO_TO_EXPORT_PAGE\":\n      return {\n        page: \"export\",\n        tracks: action.tracks,\n        session: state.session,\n        newPlaylistName: \"\"\n      };\n    default:\n      return composedReducer(state, action);\n  }\n}\n\nexport default personalPageReducer;\n","import { createReducer } from \"../createReducer\";\nimport { AudioFeatureRange, DEFAULT_AUDIO_FEATURE_RANGE } from \"../../state\";\n\nexport const audioFeatureRangeReducer = createReducer<AudioFeatureRange>({\n  SET_AUDIO_FEATURE_MIN: (state, action) => ({\n    ...state,\n    [action.feature]: [\n      action.value,\n      state[action.feature][1]\n    ]\n  }),\n  SET_AUDIO_FEATURE_MAX: (state, action) => ({\n    ...state,\n    [action.feature]: [\n      state[action.feature][0],\n      action.value\n    ]\n  }),\n  RESET_AUDIO_FEATURE_RANGE: () => DEFAULT_AUDIO_FEATURE_RANGE\n});","import { ExportPageState, ApplicationState } from \"../../state\";\nimport { Action } from \"../../action\";\nimport { composeReducers } from \"../composeReducers\";\nimport { newPlaylistNameReducer } from \"./newPlaylistNameReducer\";\n\nconst composedReducer = composeReducers<ExportPageState>({\n  newPlaylistName: newPlaylistNameReducer\n});\n\nexport function exportPageReducer(state: ExportPageState, action: Action): ApplicationState {\n  return composedReducer(state, action);\n}\n","import { createReducer } from \"../createReducer\";\n\nexport const newPlaylistNameReducer = createReducer<string>({\n  SET_NEW_PLAYLIST_NAME: (_, action) => action.value\n});\n","import { createStore } from \"redux\";\nimport { Dispatch } from \"react\";\nimport { Action } from \"./action\";\nimport { reducer } from \"./reducers/reducer\";\n\nexport const store = createStore(reducer);\nexport type ApplicationDispatch = Dispatch<Action>;\n","import { ApplicationState, INITIAL_STATE } from \"../state\";\nimport { Action } from \"../action\";\nimport landingPageReducer from \"./LandingPage/landingPageReducer\";\nimport personalPageReducer from \"./PersonalPage/personalPageReducer\";\nimport { exportPageReducer } from \"./ExportPage/exportPageReducer\";\n\nexport function reducer(state: ApplicationState | undefined, action: Action): ApplicationState {\n  if (!state) {\n    return INITIAL_STATE;\n  }\n  switch(state.page) {\n    case \"landing\":\n      return landingPageReducer(state, action);\n    case \"personal\":\n      return personalPageReducer(state, action);\n    case \"export\":\n      return exportPageReducer(state, action);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.scss';\nimport App from './App';\nimport { store } from \"./store\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Tracks_table__3jlyv\",\"header\":\"Tracks_header__3bCq6\",\"row\":\"Tracks_row__z4scu\",\"flip\":\"Tracks_flip__25DHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"RangeInput_fieldset__a0rxP\",\"group\":\"RangeInput_group__AhlvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Playlists_container__3VFZU\",\"item\":\"Playlists_item__1ar3d\"};"],"sourceRoot":""}